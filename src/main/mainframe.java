package main;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author PC-08
 */
public class mainframe extends javax.swing.JFrame {

    String time = "";
    String sub = "";
    String substring = "";
    LogManage lm = new LogManage();
    FileEdit fl = new FileEdit();
    public static String dates = "";

    /**
     * Creates new form mainframe
     */
    public mainframe() {
        try {
            setUndecorated(true);
            UIManager.setLookAndFeel("com.jtattoo.plaf.mcwin.McWinLookAndFeel");
            initComponents();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(mainframe.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        jButton1.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        jButton1.setMnemonic('S');
        jButton1.setText("  Start  Snort  ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Bright", 2, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Snort Based IDS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(169, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(163, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-653)/2, (screenSize.height-456)/2, 653, 456);
    }// </editor-fold>//GEN-END:initComponents

    @SuppressWarnings("static-access")
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            lm.dbconnection();
            lm.db.getUpdate("delete from log");
            Vector<String> vec = new Vector<>();

            vec = lm.getRules();

            while (true) {
                //    DateFormat dateFormat = new SimpleDateFormat("MM/dd-HH");
                //    Date date = new Date();
                //    dates=dateFormat.format(date).toString();
                // System.out.println(dateFormat.format(date));
                //System.out.println("dates "+dates);
                String returnValue = "";
                FileReader file;
                String line = "";
                try {
                    file = new FileReader("C:/log.txt");
                    BufferedReader reader = new BufferedReader(file);
                    while ((line = reader.readLine()) != null) {
                        returnValue += line + "\n";
                        //String [] split=returnValue.split(" ");
                        DateFormat dateFormat = new SimpleDateFormat("MM/dd-HH:");
                        Date date = new Date();
                        // System.out.println(line);
                        dates = dateFormat.format(date).toString();

                        DateFormat dateFormat1 = new SimpleDateFormat("mm");
                        Date date1 = new Date();
                        String min = dateFormat1.format(date1).toString();
                        System.out.println("dates " + dates + min);

                        int minute = Integer.parseInt(min);

                        System.out.println(line);

                        if(line.contains(dates+String.valueOf(minute)) || line.contains(dates+String.valueOf(minute-1))|| line.contains(dates+String.valueOf(minute-2)) ||line.contains(dates+String.valueOf(minute-3)) ||line.contains(dates+String.valueOf(minute-4))  ) 
//                        if (line.contains(dates + String.valueOf(minute))) //if(line.contains(dates))
                        {
                            //System.out.println(line);
                            if (line.contains("who-has")) {

                                // System.out.print("line is "+line);
                                int lastindex = line.indexOf(" ", 38);
                                //System.out.println("last index" + lastindex);

                                int firstindex = line.indexOf(" ", 30);
                                sub = line.substring(firstindex + 1, lastindex);
                                //System.out.print("Substring is" + sub);

                                int timefindex = line.indexOf("-");
                                int timelindex = line.indexOf(".");

                                time = line.substring(timefindex + 1, timelindex);
                                int first = line.lastIndexOf(" ");
                                //int last = line.lastIndexOf(":");

                                substring = line.substring(first + 1, line.length() - 1);
                                System.out.println("new sub " + substring);
                                int flag = 0;
                                for (String i : vec) {

                                    if (i.trim().equals(sub)) {
                                        //  JOptionPane.showMessageDialog(null, "in if trim");
                                        flag = 1;
                                        break;
                                    }
                                }
                                if (flag == 0) {
                                    fl.Main(sub);
                                }

                                flag = 0;
                                for (String i : vec) {
                                    // JOptionPane.showMessageDialog(null, "i is"+i);
                                    //  JOptionPane.showMessageDialog(null, "substring is"+substring);
                                    if (i.trim().equals(substring)) {
                                        flag = 1;
                                        break;
                                    }
                                }
                                if (flag == 0) {
                                    fl.Main(substring);
                                }
                            } else {

                                int timefindex = line.indexOf("-");
                                int timelindex = line.indexOf(".");

                                time = line.substring(timefindex + 1, timelindex);

                                // System.out.print("line is "+line);

                                int firstindex = line.indexOf(" ");
                                int lastindex = line.indexOf(":", firstindex + 1);
                                System.out.println("lastindex " + lastindex);
                                if (lastindex > 38 || lastindex < 30) {
                                    lastindex = line.indexOf(" ", firstindex + 1);
                                }
                                System.out.println("last index" + lastindex);
                                sub = line.substring(firstindex, lastindex);
                                System.out.print("Substring is" + sub);

                                int innd = line.lastIndexOf(" ");
                                int last = line.lastIndexOf(":");

                                if (last < 40) {
                                    last = line.length();
                                }

                                substring = line.substring(innd + 1, last);
                                System.out.println("new sub " + substring);

                                int flag = 0;
                                for (String i : vec) {
                                    //JOptionPane.showMessageDialog(null, "i is"+i);
                                    //JOptionPane.showMessageDialog(null, "sub is"+sub);
                                    if (i.trim().equals(sub)) {
                                        System.out.println("in if Trim");
                                        flag = 1;
                                        break;
                                    }
                                }

                                if (flag == 0) {
                                    fl.Main(sub);
                                }

                                flag = 0;
                                for (String i : vec) {
                                    // JOptionPane.showMessageDialog(null, "i is"+i);
                                    //   JOptionPane.showMessageDialog(null, "substring is"+substring);
                                    if (i.trim().equals(substring));
                                    {
                                        System.out.println("in if Trim");
                                        flag = 1;
                                        break;
                                    }
                                }

                                if (flag == 0) {
                                    fl.Main(substring);
                                }
                            }
                            //JOptionPane.showMessageDialog(null, "Snort alert :" + line);
                            //   }   
                            String query = "insert into log values('" + time.trim() + "','" + sub.trim() + "','" + substring.trim() + "' )";
                            lm.db.getUpdate(query);
                        }
                    }
                } catch (FileNotFoundException e) {
                    throw new RuntimeException("File not found");
                } catch (IOException e) {
                    throw new RuntimeException("IO Error occured");
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(mainframe.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {

                    new mainframe().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(mainframe.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
//    
//        public static void main(String args[]) {
//    
//            String line="04/04-18:05:36.491311 192.168.0.150:58455 -> 239.255.255.250:1900";
//          int lastindex = line.lastIndexOf(':', 45);
//                        System.out.println("last index" + lastindex);
//
//                        int firstindex=line.indexOf(" ");
//                        String sub = line.substring(firstindex+1,lastindex);
//                        System.out.print("Substring is" + sub);
//
//                        int innd = line.lastIndexOf(" ");
//                        int last = line.lastIndexOf(":");
//
//                        String substring = line.substring(innd + 1, last);
//                        System.out.println("new sub " + substring);
//                       
//                 
//            
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}